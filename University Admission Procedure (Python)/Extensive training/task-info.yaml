type: edu
files:
- name: university.py
  visible: true
  text: |-
    one, two, three = [int(input()) for x in range(3)]
    av = (one + two + three)/3
    print(av)
    if av >= 60:
        print("Congratulations, you are accepted!")
    else:
        print("We regret to inform you that we will not be able to offer you admission.")
  learner_created: false
- name: test/__init__.py
  visible: false
  learner_created: false
- name: test/application_list.py
  visible: false
  text: |-
    application_list = """Jermine Brunton 84 81 73 92 Physics Engineering Mathematics
    Justo Mirfin 71 77 61 60 Engineering Biotech Chemistry
    Uzma Naysmythe 60 94 75 71 Chemistry Engineering Mathematics
    Koury Wingo 71 81 81 83 Engineering Biotech Mathematics
    Kentrell Hillhouse 40 69 42 58 Mathematics Engineering Biotech
    Trica Macalpine 75 80 96 88 Engineering Mathematics Biotech
    Sang Muldoon 84 92 80 60 Physics Mathematics Engineering
    Laney Braithwaite 90 90 90 72 Physics Chemistry Mathematics
    Spring Burridge 71 84 98 71 Mathematics Chemistry Engineering
    Delta Fanny 84 85 83 86 Chemistry Physics Mathematics
    Elen Ashbury 54 76 88 62 Mathematics Chemistry Biotech
    Ruthanne Scaife 75 73 84 97 Engineering Biotech Mathematics
    Jaemi Hallets 81 71 73 86 Physics Engineering Mathematics
    Artavious Fay 71 77 61 60 Engineering Biotech Chemistry
    Franki Dinnis 60 94 75 71 Chemistry Biotech Mathematics
    Marlynn Favell 71 81 81 93 Engineering Biotech Mathematics
    Sameera Procter-Baines 70 59 72 68 Mathematics Engineering Biotech
    Shantale Tompkins 75 80 96 88 Engineering Mathematics Biotech
    Cornellius Turney 84 92 80 60 Physics Mathematics Engineering
    Blia Sagar 90 81 80 72 Physics Chemistry Biotech
    Wynn Crampton 71 84 98 71 Mathematics Chemistry Engineering
    Linda Risley 85 85 83 86 Chemistry Physics Mathematics
    Divina Butterworth 54 76 88 62 Mathematics Chemistry Biotech
    Meshell Otway-Ruthven 75 73 84 97 Engineering Biotech Mathematics
    Ammon Janssen 84 81 73 92 Physics Engineering Mathematics
    Maila Greg 71 77 61 60 Mathematics Biotech Chemistry
    Madiha Milligan 60 94 79 71 Physics Engineering Chemistry
    Humphrey Spakeman 71 81 81 83 Chemistry Biotech Mathematics
    Marygrace Wheelton 60 77 42 55 Mathematics Engineering Biotech
    Takyra Sieminski 74 80 96 92 Engineering Mathematics Physics
    Jathan Birley 84 92 80 60 Physics Mathematics Engineering
    Tawnia Alcock 81 80 90 72 Biotech Chemistry Physics
    Quinisha Clarkson 71 84 98 71 Mathematics Chemistry Engineering
    Dashanna Herron 80 85 73 86 Physics Chemistry Mathematics
    Verlon Mcconnell 84 61 88 62 Mathematics Chemistry Biotech
    Tawsha Rodgers 78 71 84 97 Engineering Biotech Mathematics
    Derick Whatley 81 91 73 80 Physics Engineering Mathematics
    Tisheena Mckenney 76 57 61 90 Engineering Physics Biotech
    Kyona Catrol 60 94 75 77 Chemistry Biotech Mathematics
    Jamarl Delap 92 81 85 93 Engineering Biotech Mathematics
    Tulio Carloss 66 59 82 64 Mathematics Engineering Physics
    Kaylie Lanthis 75 80 96 88 Engineering Mathematics Biotech
    Martha Hatchard 84 92 80 60 Physics Mathematics Engineering
    Genee Mccrae 90 81 80 72 Biotech Chemistry Physics
    Luna Pheobe 71 84 98 71 Chemistry Mathematics Engineering
    Savvas Hjellstrom 55 85 41 66 Chemistry Biotech Mathematics
    Mehul Bull 94 76 88 61 Mathematics Physics Biotech
    Kennedy Barrett 77 93 84 87 Chemistry Biotech Mathematics
    Marquita Mcrae 84 81 73 92 Physics Engineering Biotech
    Natha Keefe 71 67 53 60 Engineering Biotech Chemistry
    Crescentia Dow 86 94 85 51 Chemistry Physics Mathematics
    Randon Bradhust 72 88 85 83 Biotech Engineering Chemistry
    Dashawn Bosley 80 79 82 61 Mathematics Chemistry Biotech
    Nicolasa Sumpter 75 82 96 81 Engineering Mathematics Biotech
    Cressie Gillespie 85 92 82 70 Physics Mathematics Engineering
    Tawny Crockett 71 90 80 72 Chemistry Biotech Physics
    Kennon Inverarity 71 84 98 71 Mathematics Engineering Chemistry
    Halima Brydone 77 85 82 86 Chemistry Physics Mathematics
    Esther Bratby 55 76 88 62 Mathematics Chemistry Biotech
    Lorry Bunger 75 73 84 97 Engineering Biotech Physics
    Fatemah Desavigny 81 71 73 86 Physics Mathematics Engineering
    Marti Mclaws 71 71 61 60 Engineering Chemistry Biotech
    Estephanie Phelps 80 95 45 71 Chemistry Physics Mathematics
    Tommi Peerless 72 81 81 92 Engineering Physics Mathematics
    Cynthia Hermitton 70 59 62 88 Engineering Biotech Chemistry
    Cheyla Hankinson 75 80 86 88 Engineering Mathematics Biotech
    Giovanna Keel 84 71 76 80 Physics Mathematics Engineering
    Narissa Worthington 52 71 80 73 Biotech Chemistry Mathematics
    Aundria Guthrie 61 81 94 71 Mathematics Chemistry Engineering
    Teneil Maclean 85 63 84 45 Mathematics Physics Chemistry
    Shealynn Melville 74 76 88 62 Mathematics Chemistry Physics
    Darrah Smyth 75 73 84 97 Physics Biotech Engineering
    Elroy Leyte 84 81 73 92 Engineering Physics Mathematics
    Jessye Allum 71 77 61 60 Mathematics Biotech Chemistry
    Pearl Pullins 60 94 79 71 Chemistry Engineering Mathematics
    Brittania Denny 90 84 70 61 Chemistry Physics Mathematics
    Mendy Macmillan 61 81 81 70 Biotech Engineering Mathematics
    Ramina Ogilvie 80 65 70 68 Mathematics Engineering Biotech
    Ronel Cowan 75 80 96 88 Engineering Mathematics Biotech
    Stacey Revill 84 92 84 70 Chemistry Physics Mathematics
    Mir Ashley 71 84 98 71 Mathematics Physics Chemistry
    Ayeshia Jackman 80 85 73 86 Chemistry Physics Mathematics
    Jordann Rives 84 61 88 62 Mathematics Chemistry Biotech
    Katrine Proby 78 71 84 90 Engineering Biotech Mathematics
    Jermain Stobbs 81 91 73 80 Physics Engineering Mathematics
    Sharief Macallister 76 57 61 99 Engineering Physics Biotech
    Shannette Cowie 60 94 75 77 Chemistry Biotech Mathematics
    Melena Hearn 92 81 85 93 Engineering Biotech Mathematics
    Moraima Kendell 66 59 82 64 Mathematics Engineering Physics
    Amira Giddings 75 80 96 78 Engineering Mathematics Physics
    Tyrone Fern 64 92 80 52 Physics Mathematics Engineering
    Joaquin Mytton 54 76 88 62 Mathematics Chemistry Biotech
    Ehab Cocciardi 75 73 84 97 Engineering Biotech Mathematics
    Tamkia Fish 81 71 73 86 Physics Engineering Mathematics
    Deniz Blanchard 71 77 61 60 Engineering Biotech Chemistry
    Mira Riley 60 94 75 71 Chemistry Biotech Mathematics
    Loura Macansh 71 81 81 93 Engineering Physics Mathematics
    Nastassja Trustram 60 49 82 68 Mathematics Engineering Physics"""
  learner_created: false
- name: test/tests.py
  visible: false
  text: |
    from hstest import StageTest, CheckResult, WrongAnswer, TestCase
    from .application_list import application_list as application_list

    input_1 = ["5"]
    input_2 = ["23"]
    input_3 = ["10"]
    input_4 = ["15"]


    class TestAdmissionProcedure(StageTest):
        def generate(self):
            return [
                TestCase(stdin=input_1, attach=input_1, files={'applicants.txt': application_list}),
                TestCase(stdin=input_2, attach=input_2, files={'applicants.txt': application_list}),
                TestCase(stdin=input_3, attach=input_3, files={'applicants.txt': application_list}),
                TestCase(stdin=input_4, attach=input_4, files={'applicants.txt': application_list})
            ]

        @staticmethod
        def sort_by_priority(applicants, priority_n, departments_names, departments_lists, max_students, exams):

            def mean(numbers):
                return sum(numbers) / len(numbers)

            accepted_students = []
            for n, dep in enumerate(departments_names):
                dep_list = departments_lists[n]
                exam_numbers = exams[n]
                if len(dep_list) == max_students:
                    continue
                students_needed = max_students - len(dep_list)
                dep_applicants = [[applicant[0]] + [mean([applicant[exam_n + 1] for exam_n in exam_numbers])]
                                  for applicant in applicants if applicant[-1][priority_n] == dep]
                dep_applicants = sorted(dep_applicants, key=lambda x: (-x[1], x[0]))[:students_needed]
                departments_lists[n].extend(dep_applicants)
                accepted_students.extend([appl[0] for appl in dep_applicants])
            applicants = [applicant for applicant in applicants if applicant[0] not in accepted_students]
            return applicants, departments_lists

        @staticmethod
        def get_admission_lists(max_students):
            applicants = application_list.strip().split('\n')
            departments = {'Mathematics': [2], 'Physics': [0, 2],
                           'Biotech': [1, 0], 'Chemistry': [1],
                           'Engineering': [3, 2]}
            exams = [departments[dep] for dep in sorted(departments)]
            departments = sorted(departments)
            applicants_data = []
            for line in applicants:
                line = line.split()
                line = [line[0] + ' ' + line[1]] + [float(element) for element in line[2:-3]] + [line[-3:]]
                applicants_data.append(line)
            departments_lists = [[] for _ in departments]
            for i in range(len(applicants_data[-1][-1])):
                applicants_data, departments_lists = TestAdmissionProcedure.sort_by_priority(applicants_data,
                                                                                             i, departments,
                                                                                             departments_lists,
                                                                                             max_students, exams)
            departments_lists = [[' '.join([str(el) for el in applicant])
                                  for applicant in sorted(dep, key=lambda x: (-x[1], x[0]))]
                                 for dep in departments_lists]
            return departments, departments_lists

        def check(self, reply: str, attach: list):
            n = int(attach[0])
            department_names, admission_lists = self.get_admission_lists(n)
            for i, department_name in enumerate(department_names):
                filename = department_name.lower() + ".txt"
                try:
                    with open(filename, "r", encoding="utf-8") as fh:
                        output_applicants = fh.read()
                except FileNotFoundError:
                    raise WrongAnswer("The file {0} is not found.\n"
                                      "Please make sure that you output results to files\n"
                                      "and specify the correct paths for them.".format(filename))

                if not output_applicants:
                    raise WrongAnswer("The file for the {0} department is empty.".format(department_name))

                output_applicants = output_applicants.strip().split('\n')
                output_applicants = [line for line in output_applicants if line.strip()]
                correct_applicants = admission_lists[i]
                if len(correct_applicants) != len(output_applicants):
                    raise WrongAnswer("The file for the {0} department is expected to contain {1} line(s).\n"
                                      "However, {2} lines are found.".format(department_name, len(correct_applicants),
                                                                             len(output_applicants)))

                for j, applicant in enumerate(correct_applicants):
                    applicant_name, applicant_surname, score = applicant.split()
                    applicant_name = "{0} {1}".format(applicant_name, applicant_surname)
                    score = round(float(score), 2)
                    output_applicant = output_applicants[j].strip().split(' ')
                    if len(output_applicant) != 3:
                        raise WrongAnswer("Line {0} for the {1} department "
                                          "does not seem to contain three elements: first name, last name and score.\n"
                                          "Make sure you separate them "
                                          "with one whitespace character.".format(j + 1,
                                                                                  department_name))
                    output_applicant_name = "{0} {1}".format(output_applicant[0], output_applicant[1])
                    try:
                        output_score = round(float(output_applicant[-1]), 2)
                    except ValueError:
                        raise WrongAnswer("The second element in line {0} for the {1} department\n"
                                          "does not seem to be a number: \"{2}\". \n"
                                          "Make sure you format the output "
                                          "as stated in the example.".format(j + 1,
                                                                             department_name,
                                                                             output_applicant[1]))
                    if applicant_name.lower().strip() not in output_applicant_name.lower():
                        raise WrongAnswer("The first element in line {0} for the {1} department\n"
                                          "does not seem to contain the correct name of the student ({2}).\n"
                                          "Instead, it is equal to \"{3}\"".format(j + 1, department_name,
                                                                                   applicant_name,
                                                                                   output_applicant_name))

                    if score != output_score:
                        raise WrongAnswer("The second element in line {0} for the {1} department\n"
                                          "does not seem to contain the correct score of the student ({2}).\n"
                                          "Instead, it is equal to \"{3}\"".format(j + 1, department_name,
                                                                                   score,
                                                                                   output_score))

            return CheckResult.correct()


    if __name__ == '__main__':
        TestAdmissionProcedure().run_tests()
  learner_created: false
- name: applicants.txt
  visible: false
  text: |
    Jermine Brunton 84 81 73 92 Physics Engineering Mathematics
    Justo Mirfin 71 77 61 60 Engineering Biotech Chemistry
    Uzma Naysmythe 60 94 75 71 Chemistry Engineering Mathematics
    Koury Wingo 71 81 81 83 Engineering Biotech Mathematics
    Kentrell Hillhouse 40 69 42 58 Mathematics Engineering Biotech
    Trica Macalpine 75 80 96 88 Engineering Mathematics Biotech
    Sang Muldoon 84 92 80 60 Physics Mathematics Engineering
    Laney Braithwaite 90 90 90 72 Physics Chemistry Mathematics
    Spring Burridge 71 84 98 71 Mathematics Chemistry Engineering
    Delta Fanny 84 85 83 86 Chemistry Physics Mathematics
    Elen Ashbury 54 76 88 62 Mathematics Chemistry Biotech
    Ruthanne Scaife 75 73 84 97 Engineering Biotech Mathematics
    Jaemi Hallets 81 71 73 86 Physics Engineering Mathematics
    Artavious Fay 71 77 61 60 Engineering Biotech Chemistry
    Franki Dinnis 60 94 75 71 Chemistry Biotech Mathematics
    Marlynn Favell 71 81 81 93 Engineering Biotech Mathematics
    Sameera Procter-Baines 70 59 72 68 Mathematics Engineering Biotech
    Shantale Tompkins 75 80 96 88 Engineering Mathematics Biotech
    Cornellius Turney 84 92 80 60 Physics Mathematics Engineering
    Blia Sagar 90 81 80 72 Physics Chemistry Biotech
    Wynn Crampton 71 84 98 71 Mathematics Chemistry Engineering
    Linda Risley 85 85 83 86 Chemistry Physics Mathematics
    Divina Butterworth 54 76 88 62 Mathematics Chemistry Biotech
    Meshell Otway-Ruthven 75 73 84 97 Engineering Biotech Mathematics
    Ammon Janssen 84 81 73 92 Physics Engineering Mathematics
    Maila Greg 71 77 61 60 Mathematics Biotech Chemistry
    Madiha Milligan 60 94 79 71 Physics Engineering Chemistry
    Humphrey Spakeman 71 81 81 83 Chemistry Biotech Mathematics
    Marygrace Wheelton 60 77 42 55 Mathematics Engineering Biotech
    Takyra Sieminski 74 80 96 92 Engineering Mathematics Physics
    Jathan Birley 84 92 80 60 Physics Mathematics Engineering
    Tawnia Alcock 81 80 90 72 Biotech Chemistry Physics
    Quinisha Clarkson 71 84 98 71 Mathematics Chemistry Engineering
    Dashanna Herron 80 85 73 86 Physics Chemistry Mathematics
    Verlon Mcconnell 84 61 88 62 Mathematics Chemistry Biotech
    Tawsha Rodgers 78 71 84 97 Engineering Biotech Mathematics
    Derick Whatley 81 91 73 80 Physics Engineering Mathematics
    Tisheena Mckenney 76 57 61 90 Engineering Physics Biotech
    Kyona Catrol 60 94 75 77 Chemistry Biotech Mathematics
    Jamarl Delap 92 81 85 93 Engineering Biotech Mathematics
    Tulio Carloss 66 59 82 64 Mathematics Engineering Physics
    Kaylie Lanthis 75 80 96 88 Engineering Mathematics Biotech
    Martha Hatchard 84 92 80 60 Physics Mathematics Engineering
    Genee Mccrae 90 81 80 72 Biotech Chemistry Physics
    Luna Pheobe 71 84 98 71 Chemistry Mathematics Engineering
    Savvas Hjellstrom 55 85 41 66 Chemistry Biotech Mathematics
    Mehul Bull 94 76 88 61 Mathematics Physics Biotech
    Kennedy Barrett 77 93 84 87 Chemistry Biotech Mathematics
    Marquita Mcrae 84 81 73 92 Physics Engineering Biotech
    Natha Keefe 71 67 53 60 Engineering Biotech Chemistry
    Crescentia Dow 86 94 85 51 Chemistry Physics Mathematics
    Randon Bradhust 72 88 85 83 Biotech Engineering Chemistry
    Dashawn Bosley 80 79 82 61 Mathematics Chemistry Biotech
    Nicolasa Sumpter 75 82 96 81 Engineering Mathematics Biotech
    Cressie Gillespie 85 92 82 70 Physics Mathematics Engineering
    Tawny Crockett 71 90 80 72 Chemistry Biotech Physics
    Kennon Inverarity 71 84 98 71 Mathematics Engineering Chemistry
    Halima Brydone 77 85 82 86 Chemistry Physics Mathematics
    Esther Bratby 55 76 88 62 Mathematics Chemistry Biotech
    Lorry Bunger 75 73 84 97 Engineering Biotech Physics
    Fatemah Desavigny 81 71 73 86 Physics Mathematics Engineering
    Marti Mclaws 71 71 61 60 Engineering Chemistry Biotech
    Estephanie Phelps 80 95 45 71 Chemistry Physics Mathematics
    Tommi Peerless 72 81 81 92 Engineering Physics Mathematics
    Cynthia Hermitton 70 59 62 88 Engineering Biotech Chemistry
    Cheyla Hankinson 75 80 86 88 Engineering Mathematics Biotech
    Giovanna Keel 84 71 76 80 Physics Mathematics Engineering
    Narissa Worthington 52 71 80 73 Biotech Chemistry Mathematics
    Aundria Guthrie 61 81 94 71 Mathematics Chemistry Engineering
    Teneil Maclean 85 63 84 45 Mathematics Physics Chemistry
    Shealynn Melville 74 76 88 62 Mathematics Chemistry Physics
    Darrah Smyth 75 73 84 97 Physics Biotech Engineering
    Elroy Leyte 84 81 73 92 Engineering Physics Mathematics
    Jessye Allum 71 77 61 60 Mathematics Biotech Chemistry
    Pearl Pullins 60 94 79 71 Chemistry Engineering Mathematics
    Brittania Denny 90 84 70 61 Chemistry Physics Mathematics
    Mendy Macmillan 61 81 81 70 Biotech Engineering Mathematics
    Ramina Ogilvie 80 65 70 68 Mathematics Engineering Biotech
    Ronel Cowan 75 80 96 88 Engineering Mathematics Biotech
    Stacey Revill 84 92 84 70 Chemistry Physics Mathematics
    Mir Ashley 71 84 98 71 Mathematics Physics Chemistry
    Ayeshia Jackman 80 85 73 86 Chemistry Physics Mathematics
    Jordann Rives 84 61 88 62 Mathematics Chemistry Biotech
    Katrine Proby 78 71 84 90 Engineering Biotech Mathematics
    Jermain Stobbs 81 91 73 80 Physics Engineering Mathematics
    Sharief Macallister 76 57 61 99 Engineering Physics Biotech
    Shannette Cowie 60 94 75 77 Chemistry Biotech Mathematics
    Melena Hearn 92 81 85 93 Engineering Biotech Mathematics
    Moraima Kendell 66 59 82 64 Mathematics Engineering Physics
    Amira Giddings 75 80 96 78 Engineering Mathematics Physics
    Tyrone Fern 64 92 80 52 Physics Mathematics Engineering
    Joaquin Mytton 54 76 88 62 Mathematics Chemistry Biotech
    Ehab Cocciardi 75 73 84 97 Engineering Biotech Mathematics
    Tamkia Fish 81 71 73 86 Physics Engineering Mathematics
    Deniz Blanchard 71 77 61 60 Engineering Biotech Chemistry
    Mira Riley 60 94 75 71 Chemistry Biotech Mathematics
    Loura Macansh 71 81 81 93 Engineering Physics Mathematics
    Nastassja Trustram 60 49 82 68 Mathematics Engineering Physics
  learner_created: false
- name: tests.py
  visible: false
  text: |
    from test.tests import TestAdmissionProcedure

    if __name__ == '__main__':
        TestAdmissionProcedure().run_tests()
  learner_created: false
- name: students.db
  visible: true
  text: "SQLite format 3\0\x10\0\x01\x01\0@  \0\0\x0e�\0\0\0\x04\0\0\0\x03\0\0\0\x03\
    \0\0\00\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x0e�\0._\x1c\n\0\0\0\0\x10\0\0\x0e`\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01�\x17!!\x01�\x05tableapplicantsapplicants\x02\
    CREATE TABLE applicants (\n\tid INTEGER NOT NULL, \n\tname VARCHAR NOT NULL, \n\
    \tphysics_grade INTEGER NOT NULL, \n\tchemistry_grade INTEGER NOT NULL, \n\tmath_grade\
    \ INTEGER NOT NULL, \n\tcompscience_grade INTEGER NOT NULL, \n\tfirst_department\
    \ VARCHAR NOT NULL, \n\tsecond_department VARCHAR NOT NULL, \n\tthird_department\
    \ VARCHAR NOT NULL, \n\tgrade INTEGER, \n\tfaculty VARCHAR, \n\tPRIMARY KEY (id)\n\
    )\x05\0\0\0\x01\x0f�\0\0\0\0\x04\x0f�\x0f\x10\x0e�\x0e�\x0eV\x0e\x18\n�\n�\ng\n\
    )\f�\f�\fy\f<\v�\v�\vw\vD\v\x06\n�\n�\nJ\n\x0e\t�\t�\t]\t\x1c\b�\b�\bk\b)\a�\a\
    �\as\a6\x06�\x06�\x06�\x06J\x06\n\x05�\x05�\x05^\x05 \x04�\x04�\x04v\x04>\x04\x03\
    \x03�\x03�\x03M\x03\n\x02�\x02�\x02Y\x02\x1f\x01�\x01�\x01o\x011\0�\0�\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0<A\f\0/\x01\x01\x01\x01#\e\x1f\0\0Cynthia HermittonF;>XEngineeringBiotechChemistry;@\f\
    \0)\x01\x01\x01\x01#\e#\0\0Tommi PeerlessHQQ\\EngineeringPhysicsMathematics<?\f\
    \0/\x01\x01\x01\x01\x1f\e#\0\0Estephanie PhelpsP_-GChemistryPhysicsMathematics7>\f\
    \0%\x01\x01\x01\x01#\x1f\e\0\0Marti MclawsGG=<EngineeringChemistryBiotech>=\f\0\
    /\x01\x01\x01\x01\e##\0\0Fatemah DesavignyQGIVPhysicsMathematicsEngineering5<\f\
    \0%\x01\x01\x01\x01#\e\e\0\0Lorry BungerKITaEngineeringBiotechPhysics8;\f\0'\x01\
    \x01\x01\x01#\x1f\e\0\0Esther Bratby7LX>MathematicsChemistryBiotech9:\f\0)\x01\
    \x01\x01\x01\x1f\e#\0\0Halima BrydoneMURVChemistryPhysicsMathematics@9\f\0/\x01\
    \x01\x01\x01##\x1f\0\0Kennon InverarityGTbGMathematicsEngineeringChemistry58\f\
    \0)\x01\x01\x01\x01\x1f\e\e\0\0Tawny CrockettGZPHChemistryBiotechPhysics>7\f\0\
    /\x01\x01\x01\x01\e##\0\0Cressie GillespieU\\RFPhysicsMathematicsEngineering=6\f\
    \0-\x01\x01\x01\x01##\e\0\0Nicolasa SumpterKR`QEngineeringMathematicsBiotech95\f\
    \0)\x01\x01\x01\x01#\x1f\e\0\0Dashawn BosleyPOR=MathematicsChemistryBiotech:4\f\
    \0+\x01\x01\x01\x01\e#\x1f\0\0Randon BradhustHXUSBiotechEngineeringChemistry93\f\
    \0)\x01\x01\x01\x01\x1f\e#\0\0Crescentia DowV^U3ChemistryPhysicsMathematics62\f\
    \0#\x01\x01\x01\x01#\e\x1f\0\0Natha KeefeGC5<EngineeringBiotechChemistry71\f\0\
    )\x01\x01\x01\x01\e#\e\0\0Marquita McraeTQI\\PhysicsEngineeringBiotech:0\f\0+\x01\
    \x01\x01\x01\x1f\e#\0\0Kennedy BarrettM]TWChemistryBiotechMathematics3/\f\0!\x01\
    \x01\x01\x01#\e\e\0\0Mehul Bull^LX=MathematicsPhysicsBiotech<.\f\0/\x01\x01\x01\
    \x01\x1f\e#\0\0Savvas Hjellstrom7U)BChemistryBiotechMathematics:-\f\0#\x01\x01\
    \x01\x01\x1f##\0\0Luna PheobeGTbGChemistryMathematicsEngineering3,\f\0%\x01\x01\
    \x01\x01\e\x1f\e\0\0Genee MccraeZQPHBiotechChemistryPhysics<+\f\0+\x01\x01\x01\
    \x01\e##\0\0Martha HatchardT\\P<PhysicsMathematicsEngineering;*\f\0)\x01\x01\x01\
    \x01##\e\0\0Kaylie LanthisKP`XEngineeringMathematicsBiotech:)\f\0'\x01\x01\x01\
    \x01##\e\0\0Tulio CarlossB;R@MathematicsEngineeringPhysics9(\f\0%\x01\x01\x01\x01\
    #\e#\0\0Jamarl Delap\\QU]EngineeringBiotechMathematics7'\f\0%\x01\x01\x01\x01\x1f\
    \e#\0\0Kyona Catrol<^KMChemistryBiotechMathematics:&\f\0/\x01\x01\x01\x01#\e\e\
    \0\0Tisheena MckenneyL9=ZEngineeringPhysicsBiotech;%\f\0)\x01\x01\x01\x01\e##\0\
    \0Derick WhatleyQ[IPPhysicsEngineeringMathematics;$\f\0)\x01\x01\x01\x01#\e#\0\
    \0Tawsha RodgersNGTaEngineeringBiotechMathematics;#\f\0-\x01\x01\x01\x01#\x1f\e\
    \0\0Verlon McconnellT=X>MathematicsChemistryBiotech:\"\f\0+\x01\x01\x01\x01\e\x1f\
    #\0\0Dashanna HerronPUIVPhysicsChemistryMathematics@!\f\0/\x01\x01\x01\x01#\x1f\
    #\0\0Quinisha ClarksonGTbGMathematicsChemistryEngineering4 \f\0'\x01\x01\x01\x01\
    \e\x1f\e\0\0Tawnia AlcockQPZHBiotechChemistryPhysics:\x1f\f\0'\x01\x01\x01\x01\
    \e##\0\0Jathan BirleyT\\P<PhysicsMathematicsEngineering=\x1e\f\0-\x01\x01\x01\x01\
    ##\e\0\0Takyra SieminskiJP`\\EngineeringMathematicsPhysics?\x1d\f\01\x01\x01\x01\
    \x01##\e\0\0Marygrace Wheelton<M*7MathematicsEngineeringBiotech<\x1c\f\0/\x01\x01\
    \x01\x01\x1f\e#\0\0Humphrey SpakemanGQQSChemistryBiotechMathematics:\e\f\0+\x01\
    \x01\x01\x01\e#\x1f\0\0Madiha Milligan<^OGPhysicsEngineeringChemistry5\x1a\f\0\
    !\x01\x01\x01\x01#\e\x1f\0\0Maila GregGM=<MathematicsBiotechChemistry:\x19\f\0\
    '\x01\x01\x01\x01\e##\0\0Ammon JanssenTQI\\PhysicsEngineeringMathematicsB\x18\f\
    \07\x01\x01\x01\x01#\e#\0\0Meshell Otway-RuthvenKITaEngineeringBiotechMathematics=\x17\
    \f\01\x01\x01\x01\x01#\x1f\e\0\0Divina Butterworth6LX>MathematicsChemistryBiotech7\x16\
    \f\0%\x01\x01\x01\x01\x1f\e#\0\0Linda RisleyUUSVChemistryPhysicsMathematics<\x15\
    \f\0'\x01\x01\x01\x01#\x1f#\0\0Wynn CramptonGTbGMathematicsChemistryEngineering1\x14\
    \f\0!\x01\x01\x01\x01\e\x1f\e\0\0Blia SagarZQPHPhysicsChemistryBiotech>\x13\f\0\
    /\x01\x01\x01\x01\e##\0\0Cornellius TurneyT\\P<PhysicsMathematicsEngineering>\x12\
    \f\0/\x01\x01\x01\x01##\e\0\0Shantale TompkinsKP`XEngineeringMathematicsBiotechC\x11\
    \f\09\x01\x01\x01\x01##\e\0\0Sameera Procter-BainesF;HDMathematicsEngineeringBiotech;\x10\
    \f\0)\x01\x01\x01\x01#\e#\0\0Marlynn FavellGQQ]EngineeringBiotechMathematics8\x0f\
    \f\0'\x01\x01\x01\x01\x1f\e#\0\0Franki Dinnis<^KGChemistryBiotechMathematics8\x0e\
    \f\0'\x01\x01\x01\x01#\e\x1f\0\0Artavious FayGM=<EngineeringBiotechChemistry:\n\
    \f\0'\x01\x01\x01\x01\e##\0\0Jaemi HalletsQGIVPhysicsEngineeringMathematics<\f\
    \f\0+\x01\x01\x01\x01#\e#\0\0Ruthanne ScaifeKITaEngineeringBiotechMathematics7\v\
    \f\0%\x01\x01\x01\x01#\x1f\e\0\0Elen Ashbury6LX>MathematicsChemistryBiotech6\n\
    \f\0#\x01\x01\x01\x01\x1f\e#\0\0Delta FannyTUSVChemistryPhysicsMathematics>\t\f\
    \0+\x01\x01\x01\x01#\x1f#\0\0Spring BurridgeGTbGMathematicsChemistryEngineering<\b\
    \f\0/\x01\x01\x01\x01\e\x1f#\0\0Laney BraithwaiteZZZHPhysicsChemistryMathematics9\a\
    \f\0%\x01\x01\x01\x01\e##\0\0Sang MuldoonT\\P<PhysicsMathematicsEngineering<\x06\
    \f\0+\x01\x01\x01\x01##\e\0\0Trica MacalpineKP`XEngineeringMathematicsBiotech?\x05\
    \f\01\x01\x01\x01\x01##\e\0\0Kentrell Hillhouse(E*:MathematicsEngineeringBiotech8\x04\
    \f\0#\x01\x01\x01\x01#\e#\0\0Koury WingoGQQSEngineeringBiotechMathematics=\x03\
    \f\0)\x01\x01\x01\x01\x1f##\0\0Uzma Naysmythe<^KGChemistryEngineeringMathematics7\x02\
    \f\0%\x01\x01\x01\x01#\e\x1f\0\0Justo MirfinGM=<EngineeringBiotechChemistry<\x01\
    \f\0+\x01\x01\x01\x01\e##\0\0Jermine BruntonTQI\\PhysicsEngineeringMathem\0\0\0\
    \x031\0\0\0\0\0\0\0\x02\0\0\0\x04\0\0\0\x02\x0e�\x0e�\nC\a�\n�\x03�\nj\x02�\f�\
    \f�\x04�\x01�\v�\v�\vo\a0\n�\x03F\n�\x02�\n&\t�\t�\0�\t\x1c\x06�\b�\x01\x17\0�\
    \b#\x05B\x02c\a�\fk\x04Z\x02\x1c\x06�\x06C\n�\x01U\x05�\x0eK\x01�\x03�\x05\x01\
    \0�\x01�\x04n\x04/\x03�\x03�\x03v\x03;\x03\x01\x02�\x02�\x02Q\0D\x1c\f\0/\x01\x01\
    \x01\x01\x1f\e#\x01\eHumphrey SpakemanGQQSChemistryBiotechMathematicsQBiotechL!\f\
    \0/\x01\x01\x01\x01#\x1f#\x01#Quinisha ClarksonGTbGMathematicsChemistryEngineeringbMathematics<\
    \ \f\0'\x01\x01\x01\x01\e\x1f\e\x01\eTawnia AlcockQPZHBiotechChemistryPhysicsPBiotech;,\f\
    \0%\x01\x01\x01\x01\e\x1f\e\x01\eGenee MccraeZQPHBiotechChemistryPhysicsQBiotech?/\f\
    \0!\x01\x01\x01\x01#\e\e\x01#Mehul Bull^LX=MathematicsPhysicsBiotechXMathematicsG\x10\
    \f\0)\x01\x01\x01\x01#\e#\x01#Marlynn FavellGQQ]EngineeringBiotechMathematics]EngineeringE(\f\
    \0%\x01\x01\x01\x01#\e#\x01#Jamarl Delap\\QU]EngineeringBiotechMathematics]EngineeringG$\f\
    \0)\x01\x01\x01\x01#\e#\x01#Tawsha RodgersNGTaEngineeringBiotechMathematicsaEngineeringH\f\
    \f\0+\x01\x01\x01\x01#\e#\x01#Ruthanne ScaifeKITaEngineeringBiotechMathematicsaEngineeringN\x18\
    \f\07\x01\x01\x01\x01#\e#\x01#Meshell Otway-RuthvenKITaEngineeringBiotechMathematicsaEngineeringA\x16\
    \f\0%\x01\x01\x01\x01\x1f\e#\x01\x1fLinda RisleyUUSVChemistryPhysicsMathematicsUChemistry@\n\
    \f\0#\x01\x01\x01\x01\x1f\e#\x01\x1fDelta FannyTUSVChemistryPhysicsMathematicsUChemistryD0\f\
    \0+\x01\x01\x01\x01\x1f\e#\x01\x1fKennedy BarrettM]TWChemistryBiotechMathematics]ChemistryG\x03\
    \f\0)\x01\x01\x01\x01\x1f##\x01\x1fUzma Naysmythe<^KGChemistryEngineeringMathematics^ChemistryA'\f\
    \0%\x01\x01\x01\x01\x1f\e#\x01\x1fKyona Catrol<^KMChemistryBiotechMathematics^ChemistryB\x0f\
    \f\0'\x01\x01\x01\x01\x1f\e#\x01\x1fFranki Dinnis<^KGChemistryBiotechMathematics^Chemistry\x05\
    �\0 )\x01\x01\x01\x01\e#\e\0\0Marquita McraeTQI\\?1\f\0)\x01\x01\x01\x01\e#\e\x01\
    \eMarquita McraeTQI\\PhysicsEngineeringBiotechTPhysicsG#\f\0-\x01\x01\x01\x01\
    #\x1f\e\x01#Verlon McconnellT=X>MathematicsChemistryBiotechXMathematics\x06\x05\
    \0>/\x01\x01\x01\x01\x1f\e#\0\0Savvas Hjellstrom7U)BChemistryBiotechMathematics:-\f\
    \0#\x01\x01\x01\x01\x1f##\0\0Luna PheobeGTbGChemistryMathematicsEngineering\x06\
    �\0>+\x01\x01\x01\x01\e##\0\0Martha HatchardT\\P<PhysicsMathematicsEngineering;*\f\
    \0)\x01\x01\x01\x01##\e\0\0Kaylie LanthisKP`XEngineeringMathematicsBiotech:)\f\
    \0'\x01\x01\x01\x01##\e\0\0Tulio CarlossB;R@MathematicsEngineeringPhysics\al\0\
    )%\x01\x01\x01\x01#\e#\0\0Jamarl Delap\\QU]EngineeringI\x1e\f\0-\x01\x01\x01\x01\
    ##\e\x01#Takyra SieminskiJP`\\EngineeringMathematicsPhysics\\Engineering9\x14\f\
    \0!\x01\x01\x01\x01\e\x1f\e\x01\eBlia SagarZQPHPhysicsChemistryBiotechZPhysicsh\b\
    _\0,)\x01\x01\x01\x01\e##\0\0Derick WhatleyQ[IPPhysicsEnginC%\f\0)\x01\x01\x01\
    \x01\e##\x01\eDerick WhatleyQ[IPPhysicsEngineeringMathematicsQPhysicsD\b\f\0/\x01\
    \x01\x01\x01\e\x1f#\x01\eLaney BraithwaiteZZZHPhysicsChemistryMathematicsZPhysics:\"\
    \f\0+\x01\x01\x01\x01\e\x1f#\0\0Dashanna HerronPUIVPhysicsChemistryMathematics\t\
    ]\03/\x01\x01\x01\x01#\x1f#\0\0Quinisha ClarksonGTbGMathematicsChemiD\x01\f\0\
    +\x01\x01\x01\x01\e##\x01\eJermine BruntonTQI\\PhysicsEngineeringMathematicsTPhysicsB\x1f\
    \f\0'\x01\x01\x01\x01\e##\x01\eJathan BirleyT\\P<PhysicsMathematicsEngineeringTPhysics?\x1d\
    \f\01\x01\x01\x01\x01##\e\0\0Marygrace Wheelton<M*7MathematicsEngineeringBiotech\t\
    �\0>/\x01\x01\x01\x01\x1f\e#\0\0Humphrey SpakemanGQQSChemistryBiotechMathematics:\e\
    \f\0+\x01\x01\x01\x01\e#\x1f\0\0Madiha Milligan<^OGPhysicsEngineeringChemistry\v\
    D\0\x10!\x01\x01\x01\x01#\e\x1f\0\0Ma=\x1a\f\0!\x01\x01\x01\x01#\e\x1f\x01\eMaila\
    \ GregGM=<MathematicsBiotechChemistryMBiotechB\x19\f\0'\x01\x01\x01\x01\e##\x01\
    \eAmmon JanssenTQI\\PhysicsEngineeringMathematicsTPhysicsC\v\f\0%\x01\x01\x01\x01\
    #\x1f\e\x01#Elen Ashbury6LX>MathematicsChemistryBiotechXMathematicsI\x17\f\01\x01\
    \x01\x01\x01#\x1f\e\x01#Divina Butterworth6LX>MathematicsChemistryBiotechXMathematicsH\x15\
    \f\0'\x01\x01\x01\x01#\x1f#\x01#Wynn CramptonGTbGMathematicsChemistryEngineeringbMathematics\f\
    <\0+!\x01\x01\x01\x01\e\x1f\e\0\0Blia SagarZQPHPhysicsChemistrF\x13\f\0/\x01\x01\
    \x01\x01\e##\x01\eCornellius TurneyT\\P<PhysicsMathematicsEngineeringTPhysics>\x12\
    \f\0/\x01\x01\x01\x01##\e\0\0Shantale TompkinsKP`XEngineeringMathematicsBiotechC\x11\
    \f\09\x01\x01\x01\x01##\e\0\0Sameera Procter-BainesF;HDMathematicsEngineeringBiotech\f\
    �\0/)\x01\x01\x01\x01#\e#\0\0Marlynn FavellGQQ]EngineeringBiotF&\f\0/\x01\x01\x01\
    \x01#\e\e\x01#Tisheena MckenneyL9=ZEngineeringPhysicsBiotechZEngineering\x0e\x18\
    \0\n'\x01\x01\x01\x01#@\x0e\f\0'\x01\x01\x01\x01#\e\x1f\x01\eArtavious FayGM=<EngineeringBiotechChemistryMBiotechB\n\
    \f\0'\x01\x01\x01\x01\e##\x01\eJaemi HalletsQGIVPhysicsEngineeringMathematicsQPhysicsA\a\
    \f\0%\x01\x01\x01\x01\e##\x01\eSang MuldoonT\\P<PhysicsMathematicsEngineeringTPhysicsD+\f\
    \0+\x01\x01\x01\x01\e##\x01\eMartha HatchardT\\P<PhysicsMathematicsEngineeringTPhysicsJ\t\
    \f\0+\x01\x01\x01\x01#\x1f#\x01#Spring BurridgeGTbGMathematicsChemistryEngineeringbMathematics\x0f\
    \x10\03/\x01\x01\x01\x01\e\x1f#\0\0Laney BraithwaiteZZZHPhysicsChemistryD.\f\0\
    /\x01\x01\x01\x01\x1f\e#\x01\eSavvas Hjellstrom7U)BChemistryBiotechMathematicsUBiotech<\x06\
    \f\0+\x01\x01\x01\x01##\e\0\0Trica MacalpineKP`XEngineeringMathematicsBiotech?\x05\
    \f\01\x01\x01\x01\x01##\e\0\0Kentrell Hillhouse(E*:MathematicsEngineeringBiotech\x0f\
    �\07#\x01\x01\x01\x01#\e#\0\0Koury WingoGQQSEngineeringBiotechMathemat@\x04\f\0\
    #\x01\x01\x01\x01#\e#\x01\eKoury WingoGQQSEngineeringBiotechMathematicsQBiotech\0\
    \0\06%\x01\x01\x01\x01#\e\x1f\0\0Justo MirfinGM=<EngineeringBiotechChemis?\x02\
    \f\0%\x01\x01\x01\x01#\e\x1f\x01\eJusto MirfinGM=<EngineeringBiotechChemistryMBiotech\n\
    \x04�\01\0�\x05\n�\at\a0\x0fJ\x06�\x0f\x02\x02�\x06c\x02q\x05�\x01�\x0e�\x05\x13\
    \x04�\x01V\x04P\x0f�\v�\a�\fg\v�\f\x1d\x06�\x01�\x0e\x14\x03�\nh\b\x01\f�\f�\x03\
    =\x06 \x02�\t�\x01\x0e\x05L\v\t\x03�\n�\n`\n#\t�\x05�\x02(\t7\0�\x04\x0f\b�\b\
    G\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
    \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0B_\f\0+\x01\x01\x01\x01#\e\x1f\x01\eDeniz\
    \ BlanchardGM=<EngineeringBiotechChemistryMBiotechFT\f\0'\x01\x01\x01\x01#\e#\x01\
    #Katrine ProbyNGTZEngineeringBiotechMathematicsZEngineeringG@\f\0)\x01\x01\x01\
    \x01#\e#\x01#Tommi PeerlessHQQ\\EngineeringPhysicsMathematics\\EngineeringDI\f\
    \0#\x01\x01\x01\x01#\e#\x01#Elroy LeyteTQI\\EngineeringPhysicsMathematics\\EngineeringA<\f\
    \0%\x01\x01\x01\x01#\e\e\x01#Lorry BungerKITaEngineeringBiotechPhysicsaEngineeringG]\f\
    \0)\x01\x01\x01\x01#\e#\x01#Ehab CocciardiKITaEngineeringBiotechMathematicsaEngineeringC:\f\
    \0)\x01\x01\x01\x01\x1f\e#\x01\x1fHalima BrydoneMURVChemistryPhysicsMathematicsUChemistryDR\f\
    \0+\x01\x01\x01\x01\x1f\e#\x01\x1fAyeshia JackmanPUIVChemistryPhysicsMathematicsUChemistry?8\f\
    \0)\x01\x01\x01\x01\x1f\e\e\x01\x1fTawny CrockettGZPHChemistryBiotechPhysicsZChemistryBP\f\
    \0'\x01\x01\x01\x01\x1f\e#\x01\x1fStacey RevillT\\TFChemistryPhysicsMathematics\\\
    ChemistryDW\f\0+\x01\x01\x01\x01\x1f\e#\x01\x1fShannette Cowie<^KMChemistryBiotechMathematics^ChemistryFK\f\
    \0'\x01\x01\x01\x01\x1f##\x01\x1fPearl Pullins<^OGChemistryEngineeringMathematics^Chemistry?`\f\
    \0!\x01\x01\x01\x01\x1f\e#\x01\x1fMira Riley<^KGChemistryBiotechMathematics^Chemistry<A\f\
    \0/\x01\x01\x01\x01#\e\x1f\0\0Cynthia HermittonF;>XEngineeringBiotechChemistry\b\
    �\0=)\x01\x01\x01\x01#\e#\0\0Tommi PeerlessHQQ\\EngineeringPhysicsMathematicsF?\f\
    \0/\x01\x01\x01\x01\x1f\e#\x01\x1fEstephanie PhelpsP_-GChemistryPhysicsMathematics_Chemistry7>\f\
    \0%\x01\x01\x01\x01#\x1f\e\0\0Marti MclawsGG=<EngineeringChemistryBiotechCU\f\0\
    )\x01\x01\x01\x01\e##\x01\eJermain StobbsQ[IPPhysicsEngineeringMathematicsQPhysics\x01\
    \x01E\\\f\0)\x01\x01\x01\x01#\x1f\e\x01#Joaquin Mytton6LX>MathematicsChemistryBiotechXMathematicsD;\f\
    \0'\x01\x01\x01\x01#\x1f\e\x01#Esther Bratby7LX>MathematicsChemistryBiotechXMathematicsAQ\f\
    \0!\x01\x01\x01\x01#\e\x1f\x01#Mir AshleyGTbGMathematicsPhysicsChemistrybMathematicsL9\f\
    \0/\x01\x01\x01\x01##\x1f\x01#Kennon InverarityGTbGMathematicsEngineeringChemistrybMathematics=H\f\
    \0%\x01\x01\x01\x01\e\e#\x01\eDarrah SmythKITaPhysicsBiotechEngineeringIBiotechg=6\f\
    \0-\x01\x01\x01\x01##\e\0\0Nicolasa SumpterKR`QEngineeringMathematicsBiotechB4\f\
    \0+\x01\x01\x01\x01\e#\x1f\x01\eRandon BradhustHXUSBiotechEngineeringChemistryXBiotechC3\f\
    \0)\x01\x01\x01\x01\x1f\e#\x01\x1fCrescentia DowV^U3ChemistryPhysicsMathematics^ChemistryFD\f\
    \03\x01\x01\x01\x01\e\x1f#\x01\eNarissa Worthington4GPIBiotechChemistryMathematicsGBiotechDM\f\
    \0+\x01\x01\x01\x01\e##\x01\eMendy Macmillan=QQFBiotechEngineeringMathematicsQBiotech?b\f\
    \01\x01\x01\x01\x01##\e\0\0Nastassja Trustram<1RDMathematicsEngineeringPhysics\b\
    �\0+'\x01\x01\x01\x01#\e#\0\0Loura MacanshGQQ]EngineeringPFa\f\0'\x01\x01\x01\x01\
    #\e#\x01#Loura MacanshGQQ]EngineeringPhysicsMathematics]Engineering\tq\0<+\x01\
    \x01\x01\x01#\e\x1f\0\0Deniz BlanchardGM=<EngineeringBiotechChemistry8^\f\0#\x01\
    \x01\x01\x01\e##\0\0Tamkia FishQGIVPhysicsEngineeringMathematics\n�\02)\x01\x01\
    \x01\x01#\e#\0\0Ehab CocciardiKITaEngineeringBiotechDS\f\0'\x01\x01\x01\x01#\x1f\
    \e\x01#Jordann RivesT=X>MathematicsChemistryBiotechXMathematics8[\f\0#\x01\x01\
    \x01\x01\e##\0\0Tyrone Fern@\\P4PhysicsMathematicsEngineering;Z\f\0)\x01\x01\x01\
    \x01##\e\0\0Amira GiddingsKP`NEngineeringMathematicsPhysics<Y\f\0+\x01\x01\x01\
    \x01##\e\0\0Moraima KendellB;R@MathematicsEngineeringPhysics\vS\0$%\x01\x01\x01\
    \x01#\e#\0\0Melena Hearn\\QU]EngineEX\f\0%\x01\x01\x01\x01#\e#\x01#Melena Hearn\\\
    QU]EngineeringBiotechMathematics]EngineeringHV\f\03\x01\x01\x01\x01#\e\e\x01#Sharief\
    \ MacallisterL9=cEngineeringPhysicsBiotechcEngineering\n*\0=)\x01\x01\x01\x01\e\
    ##\0\0Jermain StobbsQ[IPPhysicsEngineeringMathematicsBC\f\0'\x01\x01\x01\x01\e\
    ##\x01\eGiovanna KeelTGLPPhysicsMathematicsEngineeringTPhysics\x01#EF\f\0)\x01\
    \x01\x01\x01#\e\x1f\x01#Teneil MacleanU?T-MathematicsPhysicsChemistryTMathematicsHG\f\
    \0/\x01\x01\x01\x01#\x1f\e\x01#Shealynn MelvilleJLX>MathematicsChemistryPhysicsXMathematicsJE\f\
    \0+\x01\x01\x01\x01#\x1f#\x01#Aundria Guthrie=Q^GMathematicsChemistryEngineering^Mathematics8O\f\
    \0#\x01\x01\x01\x01##\e\0\0Ronel CowanKP`XEngineeringMathematicsBiotech;N\f\0\
    )\x01\x01\x01\x01##\e\0\0Ramina OgilviePAFDMathematicsEngineeringBiotech\n�\0\
    >+\x0162\f\0#\x01\x01\x01\x01#\e\x1f\0\0Natha KeefeGC5<EngineeringBiotechChemistry:L\f\
    \0+\x01\x01\x01\x01\x1f\e#\0\0Brittania DennyZTF=ChemistryPhysicsMathematics\x0e\
    U\00'\x01\x01\x01\x01\x1f##\0\0Pearl Pullins<^OGChemistryEngineer>2\f\0#\x01\x01\
    \x01\x01#\e\x1f\x01\eNatha KeefeGC5<EngineeringBiotechChemistryCBiotech?J\f\0\
    %\x01\x01\x01\x01#\e\x1f\x01\eJessye AllumGM=<MathematicsBiotechChemistryMBiotech\x0f\
    �\0e%\x01\x01\x01\x01\e\e#\0\0Darrah SmythKITaPhysicsBiotechEngineering\x0f�\0\
    ./\x01\x01\x01\x01#\x1f\e\0\0Shealynn MelvilleJLX>MathematicsF=\f\0/\x01\x01\x01\
    \x01\e##\x01\eFatemah DesavignyQGIVPhysicsMathematicsEngineeringQPhysicsF7\f\0\
    /\x01\x01\x01\x01\e##\x01\eCressie GillespieU\\RFPhysicsMathematicsEngineeringUPhysics95\f\
    \0)\x01\x01\x01\x01#\x1f\e\0\0Dashawn BosleyPOR=MathematicsChemistryBiotech\0\0\
    \0<'\x01\x01\x01\x01\e##\0\0Giovanna KeelTGLPPhysicsMathematicsEngineering=B\f\
    \0-\x01\x01\x01\x01##\e\0\0Cheyla HankinsonKPVXEngineeringMathematicsBiotech"
  learner_created: true
- name: Mathematics.txt
  visible: true
  learner_created: true
- name: Engineering.txt
  visible: true
  learner_created: true
- name: Chemistry.txt
  visible: true
  learner_created: true
- name: Physics.txt
  visible: true
  learner_created: true
- name: Biotech.txt
  visible: true
  learner_created: true
feedback_link: https://hyperskill.org/projects/163/stages/849/implement#comment
status: Solved
feedback:
  message: Congratulations!
  time: "Sun, 30 Apr 2023 14:48:15 UTC"
record: 6
